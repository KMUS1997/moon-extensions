name: prebuild
permissions:
  contents: write
on:
  schedule:
    - cron: '0 10 * * 1-5'
  push:
    paths:
      - '.github/workflows/prebuild.yml'
  workflow_dispatch: {}

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@v7 
      with: 
        script: |
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          for (const release of releases.data) {
            if (release.tag_name === 'prebuilt') {
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
              });
            }
          }
          try {
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/prebuilt`,
            });
          } catch (error) {}
  prebuilt:
    needs: init
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: windows-x86_64
          - os: ubuntu-latest
            name: linux-x86_64
          - os: macos-14
            name: macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Installing premake5
        if: runner.os != 'macOS'
        uses: Jarod42/install-premake5@v1
      - name: Install rust
        uses: dtolnay/rust-toolchain@1.79
      - name: Build
        run: |
          premake5 build
          premake5 publish
          if [ "$RUNNER_OS" == "Windows" ]; then
            pwsh -command '$env:zip_name = (Get-ChildItem -Filter *.zip).Name; echo "zip_name=$env:zip_name" >> $env:GITHUB_ENV'
          else
            zip_name=$(ls *.zip)
            echo "zip_name=$zip_name" >> $GITHUB_ENV
          fi
      - uses: softprops/action-gh-release@v2
        with:
          name: prebuilt
          tag_name: prebuilt
          fail_on_unmatched_files: true
          files: ${{ env.zip_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
